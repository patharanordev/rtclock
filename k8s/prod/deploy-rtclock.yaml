apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtclock-server
spec:
  selector:
    matchLabels:
      run: rtclock-server
  replicas: 1
  template:
    metadata:
      labels:
        run: rtclock-server
    spec:
      containers:
      - name: rtclock-server
        image: your.registry.ip/rtclock:0.2.1-server
        ports:
        - containerPort: 3000
        resources:
          limits: # Ref. https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
            memory: 128Mi # Mi is megabytes
            cpu: 500m # m is milicore
          requests:
            cpu: 200m
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: rtclock-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rtclock-server
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50
---
kind: Service
apiVersion: v1
metadata:
  name: rtclock-server
  labels:
    run: rtclock-server
spec:
  selector:
    run: rtclock-server
  ports:
  - protocol: TCP
    port: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rtclock-ingress
spec:
  rules:
  - http:
      paths:
      - path: /ws
        backend:
          serviceName: rtclock-server
          servicePort: 3000
